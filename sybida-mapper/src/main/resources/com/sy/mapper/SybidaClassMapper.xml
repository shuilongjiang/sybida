<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.SybidaClassMapper" >
  <resultMap id="BaseResultMap" type="com.sy.pojo.SybidaClass" >
    <id column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="class_num" property="classNum" jdbcType="VARCHAR" />
    <result column="class_teach_id" property="classTeachId" jdbcType="INTEGER" />
    <result column="class_manager_id" property="classManagerId" jdbcType="INTEGER" />
    <result column="class_study_id" property="classStudyId" jdbcType="INTEGER" />
    <result column="class_time" property="classTime" jdbcType="TIMESTAMP" />
    <result column="class_is_graduate" property="classIsGraduate" jdbcType="TINYINT" />
    <result column="class_alter_time" property="classAlterTime" jdbcType="TIMESTAMP" />
    <result column="class_null1" property="classNull1" jdbcType="VARCHAR" />
    <result column="class_null2" property="classNull2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    class_id, class_num, class_teach_id, class_manager_id, class_study_id, class_time, 
    class_is_graduate, class_alter_time, class_null1, class_null2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sy.pojo.SybidaClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sybida_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sybida_class
    where class_id = #{classId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sybida_class
    where class_id = #{classId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sy.pojo.SybidaClassExample" >
    delete from sybida_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sy.pojo.SybidaClass" >
    insert into sybida_class (class_id, class_num, class_teach_id, 
      class_manager_id, class_study_id, class_time, 
      class_is_graduate, class_alter_time, class_null1, 
      class_null2)
    values (#{classId,jdbcType=INTEGER}, #{classNum,jdbcType=VARCHAR}, #{classTeachId,jdbcType=INTEGER}, 
      #{classManagerId,jdbcType=INTEGER}, #{classStudyId,jdbcType=INTEGER}, #{classTime,jdbcType=TIMESTAMP}, 
      #{classIsGraduate,jdbcType=TINYINT}, #{classAlterTime,jdbcType=TIMESTAMP}, #{classNull1,jdbcType=VARCHAR}, 
      #{classNull2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sy.pojo.SybidaClass" useGeneratedKeys="true" keyProperty="classId">
    insert into sybida_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classId != null" >
        class_id,
      </if>
      <if test="classNum != null" >
        class_num,
      </if>
      <if test="classTeachId != null" >
        class_teach_id,
      </if>
      <if test="classManagerId != null" >
        class_manager_id,
      </if>
      <if test="classStudyId != null" >
        class_study_id,
      </if>
      <if test="classTime != null" >
        class_time,
      </if>
      <if test="classIsGraduate != null" >
        class_is_graduate,
      </if>
      <if test="classAlterTime != null" >
        class_alter_time,
      </if>
      <if test="classNull1 != null" >
        class_null1,
      </if>
      <if test="classNull2 != null" >
        class_null2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="classNum != null" >
        #{classNum,jdbcType=VARCHAR},
      </if>
      <if test="classTeachId != null" >
        #{classTeachId,jdbcType=INTEGER},
      </if>
      <if test="classManagerId != null" >
        #{classManagerId,jdbcType=INTEGER},
      </if>
      <if test="classStudyId != null" >
        #{classStudyId,jdbcType=INTEGER},
      </if>
      <if test="classTime != null" >
        #{classTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classIsGraduate != null" >
        #{classIsGraduate,jdbcType=TINYINT},
      </if>
      <if test="classAlterTime != null" >
        #{classAlterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classNull1 != null" >
        #{classNull1,jdbcType=VARCHAR},
      </if>
      <if test="classNull2 != null" >
        #{classNull2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sy.pojo.SybidaClassExample" resultType="java.lang.Integer" >
    select count(*) from sybida_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sybida_class
    <set >
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.classNum != null" >
        class_num = #{record.classNum,jdbcType=VARCHAR},
      </if>
      <if test="record.classTeachId != null" >
        class_teach_id = #{record.classTeachId,jdbcType=INTEGER},
      </if>
      <if test="record.classManagerId != null" >
        class_manager_id = #{record.classManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.classStudyId != null" >
        class_study_id = #{record.classStudyId,jdbcType=INTEGER},
      </if>
      <if test="record.classTime != null" >
        class_time = #{record.classTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classIsGraduate != null" >
        class_is_graduate = #{record.classIsGraduate,jdbcType=TINYINT},
      </if>
      <if test="record.classAlterTime != null" >
        class_alter_time = #{record.classAlterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classNull1 != null" >
        class_null1 = #{record.classNull1,jdbcType=VARCHAR},
      </if>
      <if test="record.classNull2 != null" >
        class_null2 = #{record.classNull2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sybida_class
    set class_id = #{record.classId,jdbcType=INTEGER},
      class_num = #{record.classNum,jdbcType=VARCHAR},
      class_teach_id = #{record.classTeachId,jdbcType=INTEGER},
      class_manager_id = #{record.classManagerId,jdbcType=INTEGER},
      class_study_id = #{record.classStudyId,jdbcType=INTEGER},
      class_time = #{record.classTime,jdbcType=TIMESTAMP},
      class_is_graduate = #{record.classIsGraduate,jdbcType=TINYINT},
      class_alter_time = #{record.classAlterTime,jdbcType=TIMESTAMP},
      class_null1 = #{record.classNull1,jdbcType=VARCHAR},
      class_null2 = #{record.classNull2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.pojo.SybidaClass" >
    update sybida_class
    <set >
      <if test="classNum != null" >
        class_num = #{classNum,jdbcType=VARCHAR},
      </if>
      <if test="classTeachId != null" >
        class_teach_id = #{classTeachId,jdbcType=INTEGER},
      </if>
      <if test="classManagerId != null" >
        class_manager_id = #{classManagerId,jdbcType=INTEGER},
      </if>
      <if test="classStudyId != null" >
        class_study_id = #{classStudyId,jdbcType=INTEGER},
      </if>
      <if test="classTime != null" >
        class_time = #{classTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classIsGraduate != null" >
        class_is_graduate = #{classIsGraduate,jdbcType=TINYINT},
      </if>
      <if test="classAlterTime != null" >
        class_alter_time = #{classAlterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classNull1 != null" >
        class_null1 = #{classNull1,jdbcType=VARCHAR},
      </if>
      <if test="classNull2 != null" >
        class_null2 = #{classNull2,jdbcType=VARCHAR},
      </if>
    </set>
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.pojo.SybidaClass" >
    update sybida_class
    set class_num = #{classNum,jdbcType=VARCHAR},
      class_teach_id = #{classTeachId,jdbcType=INTEGER},
      class_manager_id = #{classManagerId,jdbcType=INTEGER},
      class_study_id = #{classStudyId,jdbcType=INTEGER},
      class_time = #{classTime,jdbcType=TIMESTAMP},
      class_is_graduate = #{classIsGraduate,jdbcType=TINYINT},
      class_alter_time = #{classAlterTime,jdbcType=TIMESTAMP},
      class_null1 = #{classNull1,jdbcType=VARCHAR},
      class_null2 = #{classNull2,jdbcType=VARCHAR}
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
</mapper>